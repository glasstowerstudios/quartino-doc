---
title: Quartino API Reference

language_tabs:
  - shell: cURL
  - ruby: Ruby

toc_footers:
  - <a href='mailto:jaywir3@gmail.com?subject=Quartino Developer Key&body=I would like to request a Quartino API key.%0D%0A%0D%0AName:%0D%0AApp Name:%0D%0AEmail:%0D%0A'>Request an API Key</a>
  - Using Decanter by Martina KrasnayovÃ¡ from the Noun Project
---

# Introduction

Welcome to Quartino! This is the web service for QR-Invited. Before working with the Quartino API, you'll need to register and get an application/api key from our administrators. This key serves to identify you as a developer within our systems, and to track usage of our API by application.

# Authentication

Most of the API requires that a user be authenticated prior to making subsequent calls. Any call requiring an authorization token (auth token) requires that the authentication procedure be completed prior to that call. Authenticated API calls require an auth token and user id, which are obtained from the following endpoint:

## Login with Username and Password in Body

> Example Request

```ruby
# Note: These examples use a QuartinoRestClient object which has not yet been
#       released as a separate library. If you desire the implementation for
#       this, please email Scott at jaywir3@gmail.com.
rest_client = QuartinoRestClient.new
response = rest_client.login username, password
```

```shell
curl -X POST "<%= @api_prefix %>/login" --data '{"username": "jbuffett", "password": "abcdef"}' \
  -H "X-Api-Key: <%= @api_key %>"
```

> Example Response

```json

<%= print_json data.objects['login'] %>

```

This endpoint retrieves user data (including auth_token) for a specific user.

### HTTP Request

`POST /login`

### Request Headers

Header    | Value   | Description
--------- | ------- | -----------
X-Api-Key | `api_key` | API key for your application |

### Request Parameters

Parameter | Default | Description
--------- | ------- | -----------
username | none | The username of the user to authenticate with
password | none | The password of the user to authenticate with

<aside class="note">
  These parameters can be combined and sent as an authorization header using Base64-encoding. See [Login with Authorization Header](#login-with-authorization-header) for more information.</aside>

## Login with Authorization Header

> Example Request

```ruby
# Note: These examples use a QuartinoRestClient object which has not yet been
#       released as a separate library. If you desire the implementation for
#       this, please email Scott at jaywir3@gmail.com.
rest_client = QuartinoRestClient.new
response = rest_client.login username, password
```

```shell
curl _X POST "<%= @api_prefix %>/login" \
  -H "X-Api-Key: <%= @api_key %>" \
  -H "Authorization: Basic amJ1ZmZldHQ6YWJjZGVm"
```

> Example Response

```json

<%= print_json data.objects['login'] %>

```

This endpoint retrieves user data (including auth_token) for a specific user.

### HTTP Request

`POST /login`

### Request Headers

Header    | Value   | Description
--------- | ------- | -----------
X-Api-Key | `api_key` | API key for your application |
Authorization | Basic `base64(username + ":" + password)` | Base64-encoded username and password

### Request Parameters

No parameters are required for this API method.

<aside class="note">
  This login can also be sent in separate username/password format in the body. See [Login with Username and Password in Body](#login-with-username-and-password-in-body) for more information
</aside>

# Users

<%= partial "endpoints/users" %>

<%= partial "endpoints/apps" %>

# Errors

The Quartino API uses the following error codes:

Error Code | Meaning
---------- | -------
400 | Bad Request -- The specified request is incorrect in some manner.
401 | Unauthorized -- Your API key is incorrect.
403 | Forbidden -- The authenticated user does not have access to this resource.
404 | Not Found -- The specified resource could not be found.
405 | Method Not Allowed -- You tried to access a kitten with an invalid method
406 | Not Acceptable -- A format that isn't json was requested.
410 | Gone -- The requested resource has been removed from our systems.
429 | Too Many Requests -- The server has detected too many requests in too short a period of time. Try slowing down your requests.
500 | Internal Server Error -- There was a problem in the API itself. Likely this is something that should be filed as a bug.
503 | Service Unavailable -- The Quartino API is undergoing maintenance and will be down for a period of time.
